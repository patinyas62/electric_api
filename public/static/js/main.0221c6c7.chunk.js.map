{"version":3,"sources":["component/Dashboard/Dashboard.jsx","component/History/History.jsx","component/Graph/Graph.jsx","component/Navbar/Navbar.jsx","App.js","reportWebVitals.js","index.js"],"names":["Dashboard","props","_one_realtime","state","test_now","setState","document","querySelector","classList","remove","add","_data","value","index","className","test","id","date","dc_ir","hipot","power","earth","console","log","location","count_pass","count_fail","data","slice","a","io","on","r0","result","f","overallResult","dae","split","appliance","test_result","testState","g","folk","unshift","pass","fail","onClick","this","map","Component","History","handlePageClick","e","selectedPage","selected","offset","perPage","currentPage","receivedData","date1","Date","date2","bind","obj","key","hasOwnProperty","axios","get","then","res","check_data","i","length","local_save","j","isEmpty","push","postData","pa","name","appliedOutputAmps","timeOfTest","lowerLimitMilliohms","numTests","targetOutputAmps","timeHoldSeconds","timeRampDownSeconds","timeRampUpSeconds","type","upperLimitMilliohms","pageCount","Math","ceil","getDate","parseInt","getMonth","getFullYear","checkDate1","onChange","checkDate2","previousLabel","nextLabel","breakLabel","breakClassName","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","subContainerClassName","activeClassName","Graph","day","o","l","po","po2","daa","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","yAxes","ticks","beginAtZero","option","width","height","Navbar","setCount","window","pathname","list","querySelectorAll","now","target","forEach","item","to","_onClick","App","staet","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0221c6c7.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport './Dashboard.scss'\nimport io from \"socket.io-client\";\n\nexport default class Dashboard extends Component {\n\n    constructor(props){\n        super(props);\n        console.log(props.location && props.location.state)\n        this.state = {\n            test_now: true,\n            count_pass: 0,\n            count_fail: 0,\n            data: [\n                \n            ].slice(0,4),\n            test: []\n        }\n    }\n\n    async componentDidMount(){\n        const socket = io('http://localhost:2000');\n        socket.on(\"smartfactory\", data => {\n            var r0 = data.data.result[0]\n            var f = false\n            if (data.data.result[0].overallResult === \"Passed\" ) {\n                document.querySelector(\".one_realtime\").classList.remove(\"fail\")\n                document.querySelector(\".one_realtime\").classList.add(\"pass\")\n                f = true\n            }else{\n                document.querySelector(\".one_realtime\").classList.add(\"fail\")\n                document.querySelector(\".one_realtime\").classList.remove(\"pass\")\n            }\n            var dae = r0.date.split(\" \")\n            console.log(r0.appliance[0].test_result.testState)\n            var g = {\n                id: r0.id,\n                date: dae[0],\n                test: r0.overallResult,\n                earth: r0.appliance[0].test_result.testState,\n                dc_ir: r0.appliance[1].test_result.testState,\n                hipot: r0.appliance[2].test_result.testState,\n                power: r0.appliance[3].test_result.testState\n            }\n            var folk = this.state.data\n            folk.unshift(g)\n            folk.slice(0,3)\n            // console.log(folk)\n            this.setState({\n                test_now: f,\n                data: folk,\n                count_pass: this.state.count_pass + data.pass,\n                count_fail: this.state.count_fail + data.fail\n            })\n        });\n    }\n\n    _one_realtime = () =>{\n        if(this.state.test_now === true){\n            this.setState({\n                test_now: false\n            })\n            document.querySelector(\".one_realtime\").classList.remove(\"pass\")\n            document.querySelector(\".one_realtime\").classList.add(\"fail\")\n        }else{\n            this.setState({\n                test_now: true\n            })\n            document.querySelector(\".one_realtime\").classList.remove(\"fail\")\n            document.querySelector(\".one_realtime\").classList.add(\"pass\")\n        }\n    }\n\n    _data = ((value,index) => {\n        return (\n            <div className={value.test === \"Passed\" ? \"detail box pass\":\"detail box fail\"}>\n                <div className={value.test === \"Passed\" ? \"front dens_pass\":\"front dens_fail\"} ></div>\n                    <div className=\"center_detail\">\n                    <p className=\"id\">{value.id}</p>\n                    <div className=\"children\">\n                        <p>{value.date}</p>\n                        {value.dc_ir === \"none\"?<p>-</p>: value.dc_ir === \"Passed\"?<p className=\"pass\">PASS</p>: <p className=\"fail\">FAIL</p>}\n                        {value.hipot === \"none\"?<p>-</p>: value.hipot === \"Passed\"?<p className=\"pass\">PASS</p>: <p className=\"fail\">FAIL</p>}\n                        {value.power === \"none\"?<p>-</p>: value.power === \"Passed\"?<p className=\"pass\">PASS</p>: <p className=\"fail\">FAIL</p>}\n                        {value.earth === \"none\"?<p>-</p>: value.earth === \"Passed\"?<p className=\"pass\">PASS</p>: <p className=\"fail\">FAIL</p>}\n                    </div>\n                </div>\n            </div>\n        )\n    })\n\n    render() {\n        return (\n            <div className=\"body\">\n                <div className=\"body_wrong\">\n                    <div className=\"heading\">\n                        <p>DASHBOARD</p>\n                    </div>\n                    <div className=\"show_head\">\n                        <div className=\"one_realtime box\" onClick={this._one_realtime}>\n                            <p>NOW</p>\n                            {this.state.test_now ? <p className=\"pass\">PASS</p> : <p className=\"fail\">FAIL</p>}\n                        </div>\n                        <div className=\"today_pass box pass\">\n                            <p className=\"pass\">PASS</p>\n                            <p className=\"pass\">{this.state.count_pass}</p>\n                            <p className=\"today\">Today</p>\n                        </div>\n                        <div className=\"today_fail box fail\">\n                            <p className=\"fail\">FAIL</p>\n                            <p className=\"fail\">{this.state.count_fail}</p>\n                            <p className=\"today\">Today</p>\n                        </div>\n                    </div>\n                    <div className=\"over_all\">\n                        <div className=\"header\">\n                            <p>Last Test</p>\n                        </div>\n                        <div className=\"tag\">\n                            <div className=\"fron\"></div>\n                            <div className=\"center_tag\">\n                                <p className=\"id\">ID</p>\n                                <div className=\"children\">\n                                    <p>DATE</p>\n                                    <p>DC IR</p>\n                                    <p>HIPOT 50Hz</p>\n                                    <p>Power_leakage</p>\n                                    <p>Earth Bond 50Hz</p>\n                                </div>\n                            </div>\n                        </div>\n                        {this.state.data.map(this._data)}\n                    </div>\n                </div>  \n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport axios from 'axios';\nimport Calendar from 'react-calendar';\nimport ReactPaginate from 'react-paginate';\nimport 'react-calendar/dist/Calendar.css';\n\nimport './History.scss'\n\n\nexport default class History extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            offset: 0,\n            data: [],\n            perPage: 5,\n            currentPage: 0,\n            date1: new  Date(),\n            date2: new Date()\n        };\n        this.handlePageClick = this\n            .handlePageClick\n            .bind(this);\n    }\n\n    isEmpty(obj) {\n        // tslint:disable-next-line: forin\n        // tslint:disable-next-line: prefer-const\n        for (let key in obj) {\n          if (obj.hasOwnProperty(key)) {\n            return false;\n          }\n        }\n        return true;\n    }\n\n    receivedData() {\n        axios.get(`https://smart-factory.xeus.dev/data/desc`).then(async res => {\n                const data = res.data;\n                let check_data = [];\n                for (let i = 0; i < data.data.length; i++) {\n                    var  local_save = [];\n                    for (let j = 0; j < data.data[i].result.appliance.length; j++) {\n                      if (!this.isEmpty(data.data[i].result.appliance[j])) {\n                        await local_save.push(data.data[i].result.appliance[j]);\n                      }\n                    }\n                    data.data[i].result.appliance = local_save;\n                    await check_data.push(data.data[i]);\n                }\n                this.setState({\n                    data: check_data\n                })\n                const slice = check_data.slice(this.state.offset, this.state.offset + this.state.perPage)\n                console.log(check_data)\n                const postData = slice.map((pa) => \n                    <div className={pa.result.overallResult === \"Passed\" ? \"detail_history box pass\": \"detail_history box fail\"}>\n                        <div className=\"left_history\">\n                            <p>ID: &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{pa.result.id}</p>\n                            <p>DATE:&nbsp;&nbsp; {pa.result.date}</p>\n                            <p>OverAllTest:&nbsp;&nbsp; {pa.result.overallResult}</p>\n                        </div>\n                        <div className=\"child_history\">\n                            {pa.result.appliance[0]? \n                            <div className={pa.result.appliance[0].test_result.testState === \"Passed\" ? \"card_history box pass\": \"card_history box fail\"}>\n                                <div className=\"name_history\">\n                                    <p>{pa.result.appliance[0].test.name}</p>\n                                    <p className={pa.result.appliance[0].test_result.testState === \"Passed\"?\"pass\":\"fail\"}>{pa.result.appliance[0].test_result.testState}</p>\n                                </div>\n                                <div className=\"detail_card_history\">\n                                    <h4>Result</h4>\n                                    <p>appliedOutputAmps:&nbsp;{pa.result.appliance[0].test_result.appliedOutputAmps}</p>\n                                    <p>testState:&nbsp;{pa.result.appliance[0].test_result.testState}</p>\n                                    <p>timeOfTest:&nbsp;{pa.result.appliance[0].test_result.timeOfTest}<br/><br/></p>\n                                    <h4>Detail</h4>\n                                    <p>lowerLimitMilliohms:&nbsp;{pa.result.appliance[0].test.lowerLimitMilliohms}</p>\n                                    <p>name:&nbsp;{pa.result.appliance[0].test.name}</p>\n                                    <p>numTests:&nbsp;{pa.result.appliance[0].test.numTests}</p>\n                                    <p>targetOutputAmps:&nbsp;{pa.result.appliance[0].test.targetOutputAmps}</p>\n                                    <p>timeHoldSeconds:&nbsp;{pa.result.appliance[0].test.timeHoldSeconds}</p>\n                                    <p>timeRampDownSeconds:&nbsp;{pa.result.appliance[0].test.timeRampDownSeconds}</p>\n                                    <p>timeRampUpSeconds:&nbsp;{pa.result.appliance[0].test.timeRampUpSeconds}</p>\n                                    <p>type:&nbsp;{pa.result.appliance[0].test.type}</p>\n                                    <p>upperLimitMilliohms:&nbsp;{pa.result.appliance[0].test.upperLimitMilliohms}</p>\n                                </div>\n                            </div>\n                            : null}\n                            {pa.result.appliance[1]? \n                            <div className={pa.result.appliance[1].test_result.testState === \"Passed\" ? \"card_history box pass\": \"card_history box fail\"}>\n                                <div className=\"name_history\">\n                                    <p>{pa.result.appliance[1].test.name}</p>\n                                    <p className={pa.result.appliance[1].test_result.testState === \"Passed\"?\"pass\":\"fail\"}>{pa.result.appliance[1].test_result.testState}</p>\n                                </div>\n                                <div className=\"detail_card_history\">\n                                    <h4>Result</h4>\n                                    <p>appliedOutputAmps:&nbsp;{pa.result.appliance[1].test_result.appliedOutputAmps}</p>\n                                    <p>testState:&nbsp;{pa.result.appliance[1].test_result.testState}</p>\n                                    <p>timeOfTest:&nbsp;{pa.result.appliance[1].test_result.timeOfTest}<br/><br/></p>\n                                    <h4>Detail</h4>\n                                    <p>lowerLimitMilliohms:&nbsp;{pa.result.appliance[1].test.lowerLimitMilliohms}</p>\n                                    <p>name:&nbsp;{pa.result.appliance[1].test.name}</p>\n                                    <p>numTests:&nbsp;{pa.result.appliance[1].test.numTests}</p>\n                                    <p>targetOutputAmps:&nbsp;{pa.result.appliance[1].test.targetOutputAmps}</p>\n                                    <p>timeHoldSeconds:&nbsp;{pa.result.appliance[1].test.timeHoldSeconds}</p>\n                                    <p>timeRampDownSeconds:&nbsp;{pa.result.appliance[1].test.timeRampDownSeconds}</p>\n                                    <p>timeRampUpSeconds:&nbsp;{pa.result.appliance[1].test.timeRampUpSeconds}</p>\n                                    <p>type:&nbsp;{pa.result.appliance[1].test.type}</p>\n                                    <p>upperLimitMilliohms:&nbsp;{pa.result.appliance[1].test.upperLimitMilliohms}</p>\n                                </div>\n                            </div>\n                            : null}\n                            {pa.result.appliance[2]? \n                            <div className={pa.result.appliance[2].test_result.testState === \"Passed\" ? \"card_history box pass\": \"card_history box fail\"}>\n                                <div className=\"name_history\">\n                                    <p>{pa.result.appliance[2].test.name}</p>\n                                    <p className={pa.result.appliance[2].test_result.testState === \"Passed\"?\"pass\":\"fail\"}>{pa.result.appliance[2].test_result.testState}</p>\n                                </div>\n                                <div className=\"detail_card_history\">\n                                    <h4>Result</h4>\n                                    <p>appliedOutputAmps:&nbsp;{pa.result.appliance[2].test_result.appliedOutputAmps}</p>\n                                    <p>testState:&nbsp;{pa.result.appliance[2].test_result.testState}</p>\n                                    <p>timeOfTest:&nbsp;{pa.result.appliance[2].test_result.timeOfTest}<br/><br/></p>\n                                    <h4>Detail</h4>\n                                    <p>lowerLimitMilliohms:&nbsp;{pa.result.appliance[2].test.lowerLimitMilliohms}</p>\n                                    <p>name:&nbsp;{pa.result.appliance[2].test.name}</p>\n                                    <p>numTests:&nbsp;{pa.result.appliance[2].test.numTests}</p>\n                                    <p>targetOutputAmps:&nbsp;{pa.result.appliance[2].test.targetOutputAmps}</p>\n                                    <p>timeHoldSeconds:&nbsp;{pa.result.appliance[2].test.timeHoldSeconds}</p>\n                                    <p>timeRampDownSeconds:&nbsp;{pa.result.appliance[2].test.timeRampDownSeconds}</p>\n                                    <p>timeRampUpSeconds:&nbsp;{pa.result.appliance[2].test.timeRampUpSeconds}</p>\n                                    <p>type:&nbsp;{pa.result.appliance[2].test.type}</p>\n                                    <p>upperLimitMilliohms:&nbsp;{pa.result.appliance[2].test.upperLimitMilliohms}</p>\n                                </div>\n                            </div>\n                            : null}\n                            {pa.result.appliance[3]? \n                            <div className={pa.result.appliance[3].test_result.testState === \"Passed\" ? \"card_history box pass\": \"card_history box fail\"}>\n                                <div className=\"name_history\">\n                                    <p>{pa.result.appliance[3].test.name}</p>\n                                    <p className={pa.result.appliance[3].test_result.testState === \"Passed\"?\"pass\":\"fail\"}>{pa.result.appliance[3].test_result.testState}</p>\n                                </div>\n                                <div className=\"detail_card_history\">\n                                    <h4>Result</h4>\n                                    <p>appliedOutputAmps:&nbsp;{pa.result.appliance[3].test_result.appliedOutputAmps}</p>\n                                    <p>testState:&nbsp;{pa.result.appliance[3].test_result.testState}</p>\n                                    <p>timeOfTest:&nbsp;{pa.result.appliance[3].test_result.timeOfTest}<br/><br/></p>\n                                    <h4>Detail</h4>\n                                    <p>lowerLimitMilliohms:&nbsp;{pa.result.appliance[3].test.lowerLimitMilliohms}</p>\n                                    <p>name:&nbsp;{pa.result.appliance[3].test.name}</p>\n                                    <p>numTests:&nbsp;{pa.result.appliance[3].test.numTests}</p>\n                                    <p>targetOutputAmps:&nbsp;{pa.result.appliance[3].test.targetOutputAmps}</p>\n                                    <p>timeHoldSeconds:&nbsp;{pa.result.appliance[3].test.timeHoldSeconds}</p>\n                                    <p>timeRampDownSeconds:&nbsp;{pa.result.appliance[3].test.timeRampDownSeconds}</p>\n                                    <p>timeRampUpSeconds:&nbsp;{pa.result.appliance[3].test.timeRampUpSeconds}</p>\n                                    <p>type:&nbsp;{pa.result.appliance[3].test.type}</p>\n                                    <p>upperLimitMilliohms:&nbsp;{pa.result.appliance[3].test.upperLimitMilliohms}</p>\n                                </div>\n                            </div>\n                            : null}\n                        </div>\n                    </div>\n                )\n                this.setState({\n                    pageCount: Math.ceil(check_data.length / this.state.perPage),\n                    postData\n                })\n        })\n    }\n    handlePageClick = (e) => {\n        const selectedPage = e.selected;\n        const offset = selectedPage * this.state.perPage;\n  \n        this.setState({\n            currentPage: selectedPage,\n            offset: offset\n        }, () => {\n            this.receivedData()\n        });\n  \n    };\n  \n    componentDidMount() {\n        this.receivedData()\n    }\n    render() {\n        return (\n            <div className=\"body_history\">\n                <h1>HISTORY</h1>\n                    <div className=\"over_all history\">\n                        <div className=\"header\">\n                            <p>From</p>\n                            <p className=\"date_history\">{this.state.date1.getDate() + \"/\" + (parseInt(this.state.date1.getMonth()) + 1)+ \"/\" + this.state.date1.getFullYear()}</p>\n                            <p>TO</p>\n                            <p className=\"date_history\">{this.state.date2.getDate() + \"/\" + (parseInt(this.state.date2.getMonth()) + 1)+ \"/\" + this.state.date2.getFullYear()}</p>\n                            <p className=\"liney\">|</p>\n                            <p className=\"search_history\">SERACH</p>\n                        </div>\n                        \n                        {this.state.checkDate1? <Calendar\n                                onChange={()=>{}}\n                                value={new Date()}\n                            />:null}\n                        {this.state.checkDate2? <Calendar\n                                onChange={()=>{}}\n                                value={new Date()}\n                            />:null}\n                        {this.state.postData}\n                    </div> \n                <ReactPaginate\n                    previousLabel={\"prev\"}\n                    nextLabel={\"next\"}\n                    breakLabel={\"...\"}\n                    breakClassName={\"break-me\"}\n                    pageCount={this.state.pageCount}\n                    marginPagesDisplayed={2}\n                    pageRangeDisplayed={5}\n                    onPageChange={this.handlePageClick}\n                    containerClassName={\"pagination\"}\n                    subContainerClassName={\"pages pagination\"}\n                    activeClassName={\"active\"}/>\n            </div>\n  \n        )\n    }\n}\n","import React, { Component } from 'react'\nimport Calendar from 'react-calendar'\nimport './Graph.scss' \nimport axios from 'axios';\nimport {Line} from \"react-chartjs-2\"\nexport default class Graph extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            date1: new Date(),\n            date2: new Date()\n        }\n    }\n\n    isEmpty(obj) {\n        // tslint:disable-next-line: forin\n        // tslint:disable-next-line: prefer-const\n        for (let key in obj) {\n          if (obj.hasOwnProperty(key)) {\n            return false;\n          }\n        }\n        return true;\n    }\n\n    componentDidMount() {\n        this.receivedData()\n    }\n\n    receivedData() {\n        axios.get(`https://smart-factory.xeus.dev/data/desc`).then(async res => {\n                const data = res.data;\n                let check_data = [];\n                for (let i = 0; i < data.data.length; i++) {\n                    var  local_save = [];\n                    for (let j = 0; j < data.data[i].result.appliance.length; j++) {\n                      if (!this.isEmpty(data.data[i].result.appliance[j])) {\n                        await local_save.push(data.data[i].result.appliance[j]);\n                      }\n                    }\n                    data.data[i].result.appliance = local_save;\n                    await check_data.push(data.data[i]);\n                }\n                const slice = check_data.slice()\n                var pass = [];\n                var fail = [];\n                var day = []\n                var o = 0\n                var l = 0\n\n                for (let index = 0; index < slice.length; index++) {\n                    if (slice[index].result.overallResult === \"Passed\") {\n                        o += 1\n                    }\n                    else{\n                        l += 2\n                    }\n                    let po = slice[index].result.date.split(\" \")\n                    if (index === 0) {\n                        day.push(po)\n                    } else {\n                        let po2 = day\n                        if (po[0] !== po2[po2.length - 1]) {\n                            pass.push(o)\n                            fail.push(l)\n                            day.push(po[0])\n                        }\n                    }\n                    \n                }\n                const daa = {\n                    labels: day,\n                    datasets: [\n                      {\n                        label: 'PASSED',\n                        data: fail,\n                        fill: false,\n                        backgroundColor: '#009A06',\n                        borderColor: '#009A06',\n                      },\n                      {\n                        label: 'FAILED',\n                        data: pass,\n                        fill: false,\n                        backgroundColor: '#CE0000',\n                        borderColor: '#CE0000',\n                      }\n                    ],\n                  };\n        \n                  const options = {\n                    scales: {\n                      yAxes: [\n                        {\n                          ticks: {\n                            beginAtZero: true,\n                          },\n                        },\n                      ],\n                    },\n                  };\n                \n                this.setState({\n                    data: daa,\n                    option: options\n                })\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"body_history\">\n                <h1>GRAPH</h1>\n                    <div className=\"over_all history\">\n                        <div className=\"header\">\n                            <p>From</p>\n                            <p className=\"date_history\">{this.state.date1.getDate() + \"/\" + (parseInt(this.state.date1.getMonth()) + 1)+ \"/\" + this.state.date1.getFullYear()}</p>\n                            <p>TO</p>\n                            <p className=\"date_history\">{this.state.date2.getDate() + \"/\" + (parseInt(this.state.date2.getMonth()) + 1)+ \"/\" + this.state.date2.getFullYear()}</p>\n                            <p className=\"liney\">|</p>\n                            <p className=\"search_history\">SERACH</p>\n                        </div>\n                        \n                        {this.state.checkDate1? <Calendar\n                                onChange={()=>{}}\n                                value={new Date()}\n                            />:null}\n                        {this.state.checkDate2? <Calendar\n                                onChange={()=>{}}\n                                value={new Date()}\n                            />:null}\n                        {this.state.postData}\n                    </div>\n                    <div className=\"graph\">\n                        <Line width=\"45vw\" height=\"30vh\" data={this.state.data} options={this.state.options} />\n                    </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport {Link} from \"react-router-dom\"\nimport './Navbar.scss'\n\nexport default class Navbar extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            setCount: 0\n        }\n    }\n\n    componentDidMount(){\n        const currentURL =window.location.pathname\n        if (currentURL === \"/history\") {\n            document.querySelector(\".title01\").classList.remove(\"active\")\n            document.querySelector(\".title02\").classList.add(\"active\")\n        }\n      }  \n\n    _onClick(e){\n        const list = document.querySelectorAll(\".title\");\n        const now = e.target;\n        list.forEach((item) => {\n            item.classList.remove(\"active\")\n        })\n        now.classList.add('active')        \n    }\n\n    render() {\n        return (\n            <div className=\"bacl\">\n                <div className=\"head\">\n                    <h1>Electrical Safety Test Monitoring System</h1>\n                </div>\n                <div className=\"menu\">\n                    <ul>\n                            <Link className=\"link\" to={{pathname: \"/dashboard\",state: {test: \"value\"}}} onClick={this._onClick}>\n                                <li className=\"title active title01\">\n                                    Dashboard\n                                </li>\n                            </Link>\n                            <Link className=\"link\" to={{pathname: \"/history\",state: {test: \"value\"}}}  name={this.state.test} onClick={this._onClick}>\n                                <li className=\"title title02\">\n                                    History\n                                </li>\n                            </Link>\n                            <Link className=\"link\" to={{pathname: \"/graph\",state: {test: \"value\"}}}  name={this.state.test} onClick={this._onClick}>\n                                <li className=\"title title02\">\n                                    Graph\n                                </li>\n                            </Link>\n                    </ul>\n                </div>\n                <div className=\"head\">\n                    <p>ห้างหุ้นส่วนจำกัด แอมเพิล เวิร์ค</p>\n                </div>\n            </div>\n            \n        )\n    }\n}\n","import './App.css';\n// Tools.\nimport {Route, Switch,BrowserRouter as Router} from \"react-router-dom\"\n\n// Pages.\nimport Dashboard from './component/Dashboard/Dashboard';\nimport History from './component/History/History';\nimport Graph from './component/Graph/Graph'\nimport Navbar from './component/Navbar/Navbar';\nimport React, {Component} from 'react';\n\nexport default class App extends Component{\n\n  constructor(props){\n    super(props);\n    this.staet = {\n\n    }\n  }\n\n  render(){\n    return (\n      <Router>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/dashboard\"  component={Dashboard}/>\n          <Route path=\"/history\" component={History} />\n          <Route path=\"/graph\" component={Graph} />\n        </Switch>\n      </div>\n    </Router>\n    )\n  }\n}\n\n// function App() {\n//   return (\n    \n//   );\n// }\n\n// export default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}